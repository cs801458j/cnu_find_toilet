{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9bda156e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"kakaoMap\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = {\n  class: \"searchbox\"\n};\nconst _hoisted_3 = {\n  id: \"temp\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"input\", {\n  id: \"searchBoxInput\",\n  type: \"text\",\n  value: \"\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  class: \"results\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"addr\"\n};\nconst _hoisted_8 = {\n  class: \"setCenter\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\" GPS\");\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"현재 위치 \");\n\nconst _hoisted_12 = [_hoisted_9, _hoisted_10, _hoisted_11];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"button\", {\n    id: \"enter\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.searchPlace())\n  }, \" 검색 \")]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.search.results, rs => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"place\",\n      key: rs.id,\n      onClick: $event => $options.showPlace(rs)\n    }, [_createElementVNode(\"h4\", null, _toDisplayString(rs.place_name), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_7, _toDisplayString(rs.road_address_name), 1\n    /* TEXT */\n    )], 8\n    /* PROPS */\n    , _hoisted_6);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.gps())\n  }, _hoisted_12)])]);\n}","map":{"version":3,"mappings":";;;;gEAIIA,oBAAyB,KAAzB,EAAyB;AAApBC,IAAE,EAAC;AAAiB,CAAzB,EAAkB,IAAlB,EAAkB;AAAA;AAAlB;;;AAEKC,OAAK,EAAC;;;AACJD,IAAE,EAAC;;;gEACND,oBAAgD,OAAhD,EAAgD;AAAzCC,IAAE,EAAC,gBAAsC;AAArBE,MAAI,EAAC,MAAgB;AAATC,OAAK,EAAC;AAAG,CAAhD;;AAAA;;;AAGGF,OAAK,EAAC;;;;AAGJA,OAAK,EAAC;;;AAKVA,OAAK,EAAE;;;iDACa;;iEAAIF,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;kDAAI;;iCAAJK;;uBAlB/BC,oBAqBI,KArBJ,EAqBI,IArBJ,EAqBI,CAnBFC,UAmBE,EAjBFP,oBAWM,KAXN,cAWM,CAVJA,oBAGM,KAHN,cAGM,CAFJQ,UAEI,EADJR,oBAAuD,QAAvD,EAAuD;AAA/CC,MAAE,EAAC,OAA4C;AAAnCQ,WAAK,sCAAEC,sBAAF;AAA8B,GAAvD,EAA0C,MAA1C,CACI,CAHN,CAUI,EANJV,oBAKM,KALN,cAKM,oBAJJM,oBAGMK,SAHN,EAGM,IAHN,EAGMC,YAH0BC,aAAOC,OAGjC,EAHoBC,EAAoB,IAAlB;yBAA5BT,oBAGM,KAHN,EAGM;AAHDJ,WAAK,EAAC,OAGL;AAH2Cc,SAAG,EAAED,EAAE,CAACd,EAGnD;AAHwDQ,aAAK,YAAEC,mBAAUK,EAAV;AAG/D,KAHN,GACAf,oBAA2B,IAA3B,EAA2B,IAA3B,EAA2BiB,iBAArBF,EAAE,CAACG,UAAkB,CAA3B,EAAmB;AAAA;AAAnB,OACAlB,oBAAmD,KAAnD,cAAmDiB,iBAA7BF,EAAE,CAACI,iBAA0B,CAAnD,EAA0C;AAAA;AAA1C,MAFA;;AAAA;GAGM,CAHN;;AAAA,GAII,EALN,CAMI,CAXN,CAiBE,EAJFnB,oBAEM,KAFN,cAEM,CADJA,oBAA8C,QAA9C,EAA8C;AAArCS,WAAK,sCAAEC,cAAF;AAAgC,GAA9C,cACI,CAFN,CAIE,CArBJ","names":["_createElementVNode","id","class","type","value","_hoisted_10","_createElementBlock","_hoisted_1","_hoisted_4","onClick","$options","_Fragment","_renderList","$data","results","rs","key","_toDisplayString","place_name","road_address_name"],"sourceRoot":"","sources":["C:\\cnu_find_toilet\\cnu_find_toilet\\src\\components\\KakaoMap.vue"],"sourcesContent":["\r\n<template>\r\n  <div>\r\n\r\n    <div id=\"kakaoMap\"></div>\r\n\r\n    <div class=\"searchbox\">\r\n      <div id=\"temp\">\r\n        <input id=\"searchBoxInput\" type=\"text\" value=\"\">\r\n        <button id=\"enter\" @click=\"searchPlace()\"> 검색 </button>\r\n      </div>\r\n      <div class=\"results\">\r\n        <div class=\"place\" v-for=\"rs in search.results\" :key=\"rs.id\" @click=\"showPlace(rs)\">\r\n        <h4>{{rs.place_name }}</h4>\r\n        <div class=\"addr\"> {{ rs.road_address_name }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class =\"setCenter\">\r\n      <button @click=\"gps()\"> GPS<br>현재 위치 </button>\r\n    </div>\r\n    \r\n</div>\r\n</template>\r\n\r\n<style scoped>\r\n#kakaoMap {\r\n  width: auto;\r\n  height: 600px;\r\n  margin: auto;\r\n}\r\n#temp{\r\n  display:flex;\r\n  margin:auto;\r\n}\r\n#enter{\r\n  width: 60px;\r\n}\r\n</style>\r\n\r\n<style lang = \"scss\">\r\n  .searchbox{\r\n    top: 0;\r\n    margin: auto;\r\n    text-align: center;\r\n    position: relative;\r\n    height: 100px;\r\n    width: 200px;\r\n    z-index: 10000;\r\n    background: #ffffffaa;\r\n    //overflow-y: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    }\r\n    .results{\r\n      flex: 1 1 auto;\r\n      overflow-y: auto;\r\n      .place{\r\n        padding: 8px;\r\n        cursor: pointer;\r\n        &:hover{\r\n          background-color: rgb(184, 184, 184);\r\n        }\r\n        h4{\r\n          margin : 0;\r\n        }\r\n      }\r\n    }\r\n  .setCenter{\r\n    margin: auto;\r\n    display: flex;\r\n    text-align: center;\r\n    width: 80px;\r\n    height: 80px;\r\n    top : 0;\r\n    position: relative;\r\n  }\r\n</style>\r\n\r\n<script>\r\n\r\nexport default  {\r\n  data() {\r\n    return {\r\n      map: null,\r\n      search: {\r\n        keyword: null,\r\n        pgn : null,\r\n        results : [],\r\n      }\r\n    };\r\n  },\r\n  //  methods <- 일반적으로 템플릿 내부에서 이벤트 리스너로 사용됨\r\n  methods: {\r\n\r\n    //초기 맵 생성\r\n    initMap() {\r\n      const container = document.getElementById(\"kakaoMap\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(36.36662192460574, 127.34445497915917),\r\n        level: 3\r\n      };\r\n      //kakao.maps.disabledHD();\r\n      this.map = new kakao.maps.Map(container, options);//지도 생성\r\n    },\r\n\r\n    //gps 위치로 이동\r\n    gps(){\r\n      const container = document.getElementById(\"kakaoMap\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(36.36662192460574, 127.34445497915917),\r\n        level: 3\r\n      };\r\n      if(navigator.geolocation){//gps 사용\r\n        //GeoLoaction접속\r\n        navigator.geolocation.getCurrentPosition(function(position){\r\n          var lat = position.coords.latitude,\r\n              lon = position.coords.longitude;\r\n          var locPosition = new kakao.maps.LatLng(lat, lon),\r\n              message = '<div style=\"padding:5px;\">현재 위치</div>';\r\n          displayMarker(locPosition, message);\r\n        });\r\n      }else{//gps 사용불가\r\n        var locPosition = new kakao.maps.LatLng(36.36662192460574, 127.34445497915917),\r\n            message = '위치 정보를 불러올 수 없습니다.'\r\n            displayMarker(locPosition, message);\r\n      }\r\n      //마커 표시, locPosition:좌표, message:메세지\r\n      function displayMarker(locPosition, message){\r\n        var map = new kakao.maps.Map(container, options);\r\n        var marker = new kakao.maps.Marker({\r\n          map : map,\r\n          position: locPosition\r\n        });\r\n        var iwContent = message,\r\n            iwRemoveable = true;\r\n        var infowindow = new kakao.maps.InfoWindow({\r\n            content : iwContent,\r\n            removable : iwRemoveable\r\n        });\r\n        map.setCenter(locPosition);\r\n        infowindow.open(map, marker);\r\n      }\r\n    },\r\n\r\n    //키워드 검색\r\n    searchPlace(){\r\n      //const keyword = e.target.value.trim();\r\n      const keyword = document.getElementById('searchBoxInput').value;\r\n      if(keyword.length===0){\r\n        return;\r\n      }\r\n      const ps = new kakao.maps.services.Places();\r\n      ps.keywordSearch(keyword, (data, status, pgn) => {\r\n       this.search.keyword = keyword;\r\n       this.search.pgn = pgn;\r\n       this.search.results = data;\r\n      });\r\n    },\r\n\r\n    //키워드 검색 결과 클릭시 해당 위치로 화면 이동\r\n    showPlace(place){\r\n      console.log(place);\r\n      var locPosition = new kakao.maps.LatLng(place.y, place.x),\r\n      message = '<div style=\"padding:5px;\">현재 위치</div>';\r\n      const container = document.getElementById(\"kakaoMap\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(36.36662192460574, 127.34445497915917),\r\n        level: 3\r\n      };\r\n      /*\r\n      gps()의 마커 표시와 동일합니다.\r\n      gps()메소드에서 displayMarker()함수를 호출하는데 오류가 생겨서 동일한 내용을 작성했습니다.\r\n      */\r\n      function displayMarker(locPosition, message){\r\n        var map = new kakao.maps.Map(container, options);\r\n        var marker = new kakao.maps.Marker({\r\n          map : map,\r\n          position: locPosition\r\n        });\r\n        var iwContent = message,\r\n            iwRemoveable = true;\r\n        var infowindow = new kakao.maps.InfoWindow({\r\n            content : iwContent,\r\n            removable : iwRemoveable\r\n        });\r\n        map.setCenter(locPosition);\r\n        infowindow.open(map, marker);\r\n      }\r\n      displayMarker(locPosition, message);\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!window.kakao || !window.kakao.maps) {\r\n      // script 태그 객체 생성\r\n      const script = document.createElement('script');\r\n      /* global */\r\n      document.cookie = \"safeCookie1=foo; SameSite=Lax\"; \r\n      document.cookie = \"safeCookie2=foo\";  \r\n      document.cookie = \"crossCookie=bar; SameSite=None; Secure\";\r\n      script.onload = () => kakao.maps.load(this.initMap);\r\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=\"+process.env.VUE_APP_KAKAOMAP_KEY;\r\n      document.head.appendChild(script);\r\n      /* global  */\r\n      // script.addEventListener(\"load\", () => {\r\n      //   kakao.maps.load(this.initMap);\r\n      // });\r\n      // document head에 script 추가\r\n      // `https://map.kakao.com/?sName=\r\n      \r\n    } else {\r\n      this.initMap();\r\n    }\r\n\r\n    // let maps = [\r\n    //     {\r\n    //       id: 1,\r\n    //       store: '학생문화관점',\r\n    //       location: '학생문화관 지하1층 로비',\r\n    //       time: '학기 중: 월~금 08:30~19:00 | 토 09:00~14:00',\r\n    //       vacation: '방학 중: 월~금 08:30~18:00 | 토 09:00~14:00',\r\n    //       tel: '02-3277-3707',\r\n    //       latlng: new kakao.maps.LatLng(36.36662192460574, 127.34445497915917),\r\n    //     },\r\n    //     {\r\n    //       id: 2,\r\n    //       store: '학생문화관점',\r\n    //       location: '학생문화관 지하1층 로비',\r\n    //       time: '학기 중: 월~금 08:30~19:00 | 토 09:00~14:00',\r\n    //       vacation: '방학 중: 월~금 08:30~18:00 | 토 09:00~14:00',\r\n    //       tel: '02-3277-3707',\r\n    //       latlng: new kakao.maps.LatLng(36.36662192460574, 127.34445497912),\r\n    //     }\r\n    //   ]\r\n\r\n    //   let imageSrc = require('@/assets/logo.png'), // 마커이미지의 주소입니다\r\n    //   imageSize = new kakao.maps.Size(24, 35), // 마커이미지의 크기입니다\r\n    //   imageOption = { offset: new kakao.maps.Point(20, 35) }; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\r\n      \r\n    //   let markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption);\r\n\r\n    //   maps.forEach(function(pos) {\r\n    //     let marker = new kakao.maps.Marker({\r\n    //       map: kakaoMap, // 마커를 표시할 지도\r\n    //       position: pos.latlng, // 마커의 위치\r\n    //       image: markerImage,\r\n    //     });\r\n    //   });\r\n\r\n    //   var customOverlay = new kakao.maps.CustomOverlay({\r\n    //     position: pos.latlng,\r\n    //     xAnchor: 0.5,\r\n    //     yAnchor: 1.05,\r\n    //   });\r\n  }\r\n  \r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}